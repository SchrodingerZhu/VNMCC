\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kr}{type} \PYG{k+kt}{ALUResult}
  \PYG{o+ow}{=} \PYG{p}{(} \PYG{k+kt}{BitVector} \PYG{l+m+mi}{32} \PYG{c+c1}{\PYGZhy{}\PYGZhy{} Arithmetic Result}
    \PYG{p}{,} \PYG{k+kt}{Bool} \PYG{c+c1}{\PYGZhy{}\PYGZhy{} Overflow Result}
    \PYG{p}{,} \PYG{k+kt}{Bool} \PYG{c+c1}{\PYGZhy{}\PYGZhy{} Zero Flag}
    \PYG{p}{,} \PYG{k+kt}{Bool} \PYG{c+c1}{\PYGZhy{}\PYGZhy{} Negative Flag}
    \PYG{p}{)}

\PYG{c+cm}{\PYGZob{}\PYGZhy{}\PYGZsh{} ANN arithmeticUnit}
\PYG{c+cm}{    ( Synthesize}
\PYG{c+cm}{      \PYGZob{} t\PYGZus{}name = \PYGZdq{}ArithmeticUnit\PYGZdq{}}
\PYG{c+cm}{      , t\PYGZus{}inputs =}
\PYG{c+cm}{          [ PortName \PYGZdq{}OPERATION\PYGZdq{}}
\PYG{c+cm}{          , PortName \PYGZdq{}OPERAND\PYGZus{}1\PYGZdq{}}
\PYG{c+cm}{          , PortName \PYGZdq{}OPERAND\PYGZus{}2\PYGZdq{}}
\PYG{c+cm}{          ]}
\PYG{c+cm}{      , t\PYGZus{}output =}
\PYG{c+cm}{          PortProduct \PYGZdq{}ALU\PYGZdq{}}
\PYG{c+cm}{            [ PortName \PYGZdq{}RESULT\PYGZdq{}}
\PYG{c+cm}{            , PortName \PYGZdq{}OVERFLOW\PYGZdq{}}
\PYG{c+cm}{            , PortName \PYGZdq{}ZERO\PYGZdq{}}
\PYG{c+cm}{            , PortName \PYGZdq{}NEG\PYGZdq{}}
\PYG{c+cm}{            ]}
\PYG{c+cm}{       \PYGZcb{}}
\PYG{c+cm}{     )}
\PYG{c+cm}{\PYGZsh{}\PYGZhy{}\PYGZcb{}}

\PYG{n+nf}{arithmeticUnit} \PYG{o+ow}{::} \PYG{k+kt}{ALUOperation} \PYG{o+ow}{\PYGZhy{}\PYGZgt{}} \PYG{k+kt}{BitVector} \PYG{l+m+mi}{32} \PYG{o+ow}{\PYGZhy{}\PYGZgt{}} \PYG{k+kt}{BitVector} \PYG{l+m+mi}{32} \PYG{o+ow}{\PYGZhy{}\PYGZgt{}} \PYG{k+kt}{ALUResult}
\PYG{n+nf}{arithmeticUnit} \PYG{n}{op} \PYG{n}{opr0} \PYG{n}{opr1} \PYG{o+ow}{=} \PYG{p}{(}\PYG{n}{res}\PYG{p}{,} \PYG{n}{o}\PYG{p}{,} \PYG{n}{z}\PYG{p}{,} \PYG{n}{n}\PYG{p}{)}
  \PYG{k+kr}{where}
    \PYG{p}{(}\PYG{n}{res}\PYG{p}{,} \PYG{n}{o}\PYG{p}{,} \PYG{n}{n}\PYG{p}{)} \PYG{o+ow}{=} \PYG{n}{arithmeticUnit\PYGZsq{}} \PYG{n}{op}
    \PYG{n}{z} \PYG{o+ow}{=} \PYG{n}{res} \PYG{o}{==} \PYG{l+m+mi}{0}
\end{Verbatim}
