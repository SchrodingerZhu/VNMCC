\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cm}{\PYGZob{}\PYGZhy{}\PYGZsh{} ANN arithmeticModule}
\PYG{c+cm}{    ( Synthesize}
\PYG{c+cm}{      \PYGZob{} t\PYGZus{}name = \PYGZdq{}AithmeticModule\PYGZdq{}}
\PYG{c+cm}{      , t\PYGZus{}inputs =}
\PYG{c+cm}{          [ PortName \PYGZdq{}CLOCK\PYGZdq{}}
\PYG{c+cm}{          , PortName \PYGZdq{}RESET\PYGZdq{}}
\PYG{c+cm}{          , PortName \PYGZdq{}ENABLE\PYGZdq{}}
\PYG{c+cm}{          , PortName \PYGZdq{}FW\PYGZus{}0\PYGZdq{}}
\PYG{c+cm}{          , PortName \PYGZdq{}FW\PYGZus{}1\PYGZdq{}}
\PYG{c+cm}{          , PortName \PYGZdq{}STALL\PYGZdq{}}
\PYG{c+cm}{          , PortProduct \PYGZdq{}AM\PYGZdq{}}
\PYG{c+cm}{              [ PortName \PYGZdq{}WRITE\PYGZdq{}}
\PYG{c+cm}{              , PortName \PYGZdq{}MEM\PYGZdq{}}
\PYG{c+cm}{              , PortName \PYGZdq{}BRANCH\PYGZus{}FLAG\PYGZdq{}}
\PYG{c+cm}{              , PortName \PYGZdq{}ALU\PYGZdq{}}
\PYG{c+cm}{              , PortName \PYGZdq{}IMM\PYGZdq{}}
\PYG{c+cm}{              , PortName \PYGZdq{}RS\PYGZdq{}}
\PYG{c+cm}{              , PortName \PYGZdq{}RSV\PYGZdq{}}
\PYG{c+cm}{              , PortName \PYGZdq{}RT\PYGZdq{}}
\PYG{c+cm}{              , PortName \PYGZdq{}RTV\PYGZdq{}}
\PYG{c+cm}{              , PortName \PYGZdq{}COUNTER\PYGZdq{}}
\PYG{c+cm}{              ]}
\PYG{c+cm}{          ]}
\PYG{c+cm}{      , t\PYGZus{}output =}
\PYG{c+cm}{          PortProduct \PYGZdq{}AM\PYGZdq{}}
\PYG{c+cm}{            [ PortName \PYGZdq{}WRITE\PYGZus{}REG\PYGZdq{}}
\PYG{c+cm}{            , PortName \PYGZdq{}MEM\PYGZus{}OP\PYGZdq{}}
\PYG{c+cm}{            , PortName \PYGZdq{}RESULT\PYGZdq{}}
\PYG{c+cm}{            , PortName \PYGZdq{}BRANCH\PYGZus{}TARGET\PYGZdq{}}
\PYG{c+cm}{            ]}
\PYG{c+cm}{      \PYGZcb{}}
\PYG{c+cm}{    )}
\PYG{c+cm}{\PYGZsh{}\PYGZhy{}\PYGZcb{}}
\PYG{n+nf}{arithmeticModule}
  \PYG{o+ow}{::} \PYG{k+kt}{Clock} \PYG{k+kt}{System}
  \PYG{o+ow}{\PYGZhy{}\PYGZgt{}} \PYG{k+kt}{Reset} \PYG{k+kt}{System}
  \PYG{o+ow}{\PYGZhy{}\PYGZgt{}} \PYG{k+kt}{Enable} \PYG{k+kt}{System}
  \PYG{o+ow}{\PYGZhy{}\PYGZgt{}} \PYG{k+kt}{Signal} \PYG{k+kt}{System} \PYG{k+kt}{ForwardInfo} \PYG{c+c1}{\PYGZhy{}\PYGZhy{} last}
  \PYG{o+ow}{\PYGZhy{}\PYGZgt{}} \PYG{k+kt}{Signal} \PYG{k+kt}{System} \PYG{k+kt}{ForwardInfo} \PYG{c+c1}{\PYGZhy{}\PYGZhy{} last last}
  \PYG{o+ow}{\PYGZhy{}\PYGZgt{}} \PYG{k+kt}{Signal} \PYG{k+kt}{System} \PYG{k+kt}{Bool}
  \PYG{o+ow}{\PYGZhy{}\PYGZgt{}} \PYG{k+kt}{Signal} \PYG{k+kt}{System} \PYG{k+kt}{ALUState}    \PYG{c+c1}{\PYGZhy{}\PYGZhy{} input}
  \PYG{o+ow}{\PYGZhy{}\PYGZgt{}} \PYG{k+kt}{Signal} \PYG{k+kt}{System} \PYG{k+kt}{ALUOutput}   \PYG{c+c1}{\PYGZhy{}\PYGZhy{} output}
\PYG{n+nf}{arithmeticModule} \PYG{n}{clk} \PYG{n}{rst} \PYG{n}{enable} \PYG{n}{last} \PYG{n}{last\PYGZsq{}} \PYG{n}{stall} \PYG{n}{input} \PYG{o+ow}{=}
  \PYG{k+kr}{let} \PYG{p}{(}\PYG{n}{write}\PYG{p}{,} \PYG{n}{mem}\PYG{p}{,} \PYG{n}{branch}\PYG{p}{,} \PYG{n}{alu}\PYG{p}{,} \PYG{n}{imm}\PYG{p}{,} \PYG{n}{rs}\PYG{p}{,} \PYG{n}{rsv}\PYG{p}{,} \PYG{n}{rt}\PYG{p}{,} \PYG{n}{rtv}\PYG{p}{,} \PYG{n}{counter}\PYG{p}{)} \PYG{o+ow}{=}
        \PYG{n}{unbundle} \PYG{o}{\PYGZdl{}}
        \PYG{p}{((}\PYG{n}{exposeClockResetEnable} \PYG{n}{arithmeticModuleState}\PYG{p}{)} \PYG{n}{clk} \PYG{n}{rst} \PYG{n}{enable}\PYG{p}{)} \PYG{o}{\PYGZdl{}}
        \PYG{n}{bundle} \PYG{p}{(}\PYG{n}{input}\PYG{p}{,} \PYG{n}{stall}\PYG{p}{)}
      \PYG{p}{(}\PYG{n}{check0}\PYG{p}{,} \PYG{n}{check1}\PYG{p}{)} \PYG{o+ow}{=} \PYG{n}{unbundle} \PYG{o}{\PYGZdl{}} \PYG{n}{forwardUnit} \PYG{n}{clk} \PYG{n}{rst} \PYG{n}{enable} \PYG{n}{last} \PYG{n}{last\PYGZsq{}} \PYG{n}{rs} \PYG{n}{rt}

      \PYG{n}{unwrap} \PYG{p}{(}\PYG{k+kt}{Just} \PYG{n}{a}\PYG{p}{)} \PYG{o+ow}{=} \PYG{n}{a}
      \PYG{n}{unwrap} \PYG{k+kr}{\PYGZus{}} \PYG{o+ow}{=} \PYG{l+m+mi}{0}

      \PYG{n}{rsv\PYGZsq{}} \PYG{o+ow}{=} \PYG{p}{(}\PYG{o}{\PYGZlt{}|\PYGZgt{}}\PYG{p}{)} \PYG{o}{\PYGZlt{}\PYGZdl{}\PYGZgt{}} \PYG{n}{check0} \PYG{o}{\PYGZlt{}*\PYGZgt{}} \PYG{p}{(}\PYG{n}{pure} \PYG{o}{\PYGZlt{}\PYGZdl{}\PYGZgt{}} \PYG{n}{rsv}\PYG{p}{)}
      \PYG{n}{rtv0} \PYG{o+ow}{=} \PYG{p}{((}\PYG{o}{\PYGZlt{}|\PYGZgt{}}\PYG{p}{)} \PYG{o}{\PYGZlt{}\PYGZdl{}\PYGZgt{}} \PYG{n}{check1} \PYG{o}{\PYGZlt{}*\PYGZgt{}} \PYG{p}{(}\PYG{n}{pure} \PYG{o}{\PYGZlt{}\PYGZdl{}\PYGZgt{}} \PYG{n}{rtv}\PYG{p}{))}
      \PYG{n}{rtv\PYGZsq{}} \PYG{o+ow}{=} \PYG{p}{(}\PYG{o}{\PYGZlt{}|\PYGZgt{}}\PYG{p}{)} \PYG{o}{\PYGZlt{}\PYGZdl{}\PYGZgt{}} \PYG{n}{imm} \PYG{o}{\PYGZlt{}*\PYGZgt{}} \PYG{n}{rtv0}

      \PYG{n}{memSolver} \PYG{k+kt}{MemWrite} \PYG{n}{value} \PYG{o+ow}{=} \PYG{k+kt}{MemWrite\PYGZsq{}} \PYG{n}{value}
      \PYG{n}{memSolver} \PYG{k+kt}{MemLoad} \PYG{k+kr}{\PYGZus{}} \PYG{o+ow}{=} \PYG{k+kt}{MemLoad\PYGZsq{}}
      \PYG{n}{memSolver} \PYG{k+kr}{\PYGZus{}} \PYG{k+kr}{\PYGZus{}} \PYG{o+ow}{=} \PYG{k+kt}{MemNone\PYGZsq{}}

      \PYG{n}{mem\PYGZsq{}} \PYG{o+ow}{=} \PYG{n}{memSolver} \PYG{o}{\PYGZlt{}\PYGZdl{}\PYGZgt{}} \PYG{n}{mem} \PYG{o}{\PYGZlt{}*\PYGZgt{}} \PYG{p}{(}\PYG{n}{unwrap} \PYG{o}{\PYGZlt{}\PYGZdl{}\PYGZgt{}} \PYG{n}{rtv0}\PYG{p}{)}
      \PYG{p}{(}\PYG{n}{res}\PYG{p}{,} \PYG{k+kr}{\PYGZus{}}\PYG{p}{,} \PYG{n}{z}\PYG{p}{,} \PYG{k+kr}{\PYGZus{}}\PYG{p}{)} \PYG{o+ow}{=}
        \PYG{n}{unbundle} \PYG{o}{\PYGZdl{}}
        \PYG{n}{arithmeticUnit} \PYG{o}{\PYGZlt{}\PYGZdl{}\PYGZgt{}} \PYG{n}{alu} \PYG{o}{\PYGZlt{}*\PYGZgt{}} \PYG{p}{(}\PYG{n}{unwrap} \PYG{o}{\PYGZlt{}\PYGZdl{}\PYGZgt{}} \PYG{n}{rsv\PYGZsq{}}\PYG{p}{)} \PYG{o}{\PYGZlt{}*\PYGZgt{}} \PYG{p}{(}\PYG{n}{unwrap} \PYG{o}{\PYGZlt{}\PYGZdl{}\PYGZgt{}} \PYG{n}{rtv\PYGZsq{}}\PYG{p}{)}

      \PYG{n}{check\PYGZus{}branch} \PYG{k+kt}{True} \PYG{p}{(}\PYG{k+kt}{BranchEQ} \PYG{n}{delta}\PYG{p}{)} \PYG{n}{pc} \PYG{k+kr}{\PYGZus{}} \PYG{o+ow}{=} \PYG{k+kt}{Just} \PYG{p}{(}\PYG{n}{pc} \PYG{o}{+} \PYG{n}{unpack} \PYG{n}{delta}\PYG{p}{)}
      \PYG{n}{check\PYGZus{}branch} \PYG{k+kt}{False} \PYG{p}{(}\PYG{k+kt}{BranchNE} \PYG{n}{delta}\PYG{p}{)} \PYG{n}{pc} \PYG{k+kr}{\PYGZus{}} \PYG{o+ow}{=} \PYG{k+kt}{Just} \PYG{p}{(}\PYG{n}{pc} \PYG{o}{+} \PYG{n}{unpack} \PYG{n}{delta}\PYG{p}{)}
      \PYG{n}{check\PYGZus{}branch} \PYG{k+kr}{\PYGZus{}} \PYG{k+kt}{Jump} \PYG{k+kr}{\PYGZus{}} \PYG{p}{(}\PYG{k+kt}{Just} \PYG{n}{i}\PYG{p}{)} \PYG{o+ow}{=} \PYG{k+kt}{Just} \PYG{p}{(}\PYG{n}{unpack} \PYG{n}{i}\PYG{p}{)}
      \PYG{n}{check\PYGZus{}branch} \PYG{k+kr}{\PYGZus{}} \PYG{k+kr}{\PYGZus{}} \PYG{k+kr}{\PYGZus{}} \PYG{k+kr}{\PYGZus{}} \PYG{o+ow}{=} \PYG{k+kt}{Nothing}

      \PYG{n}{branch\PYGZsq{}} \PYG{o+ow}{=} \PYG{n}{check\PYGZus{}branch} \PYG{o}{\PYGZlt{}\PYGZdl{}\PYGZgt{}} \PYG{n}{z} \PYG{o}{\PYGZlt{}*\PYGZgt{}} \PYG{n}{branch} \PYG{o}{\PYGZlt{}*\PYGZgt{}} \PYG{n}{counter} \PYG{o}{\PYGZlt{}*\PYGZgt{}} \PYG{n}{imm}
  \PYG{k+kr}{in} \PYG{n}{bundle} \PYG{p}{(}\PYG{n}{write}\PYG{p}{,} \PYG{n}{mem\PYGZsq{}}\PYG{p}{,} \PYG{n}{res}\PYG{p}{,} \PYG{n}{branch\PYGZsq{}}\PYG{p}{)}
\end{Verbatim}
