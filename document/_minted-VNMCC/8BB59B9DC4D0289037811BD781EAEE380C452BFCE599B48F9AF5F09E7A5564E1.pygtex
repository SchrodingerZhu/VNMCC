\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kr}{type} \PYG{k+kt}{MemOutput}
  \PYG{o+ow}{=} \PYG{p}{(} \PYG{k+kt}{Maybe} \PYG{p}{(}\PYG{k+kt}{Unsigned} \PYG{l+m+mi}{32}\PYG{p}{)} \PYG{c+c1}{\PYGZhy{}\PYGZhy{} branch target}
    \PYG{p}{,} \PYG{k+kt}{Maybe} \PYG{p}{(}\PYG{k+kt}{RegNo}\PYG{p}{,} \PYG{k+kt}{Reg}\PYG{p}{)}  \PYG{c+c1}{\PYGZhy{}\PYGZhy{} write pair}
    \PYG{p}{)}

\PYG{c+cm}{\PYGZob{}\PYGZhy{}\PYGZsh{} ANN memoryModule}
\PYG{c+cm}{    ( Synthesize}
\PYG{c+cm}{      \PYGZob{} t\PYGZus{}name = \PYGZdq{}MemoryModule\PYGZdq{}}
\PYG{c+cm}{      , t\PYGZus{}inputs =}
\PYG{c+cm}{          [ PortName \PYGZdq{}CLOCK\PYGZdq{}}
\PYG{c+cm}{          , PortName \PYGZdq{}RESET\PYGZdq{}}
\PYG{c+cm}{          , PortName \PYGZdq{}ENABLE\PYGZdq{}}
\PYG{c+cm}{          , PortProduct \PYGZdq{}MMI\PYGZdq{}}
\PYG{c+cm}{              [ PortName \PYGZdq{}WRITE\PYGZus{}REG\PYGZdq{}}
\PYG{c+cm}{              , PortName \PYGZdq{}MEM\PYGZus{}OP\PYGZdq{}}
\PYG{c+cm}{              , PortName \PYGZdq{}RESULT\PYGZdq{}}
\PYG{c+cm}{              , PortName \PYGZdq{}BRANCH\PYGZus{}TARGET\PYGZdq{}}
\PYG{c+cm}{              ]}
\PYG{c+cm}{          , PortName \PYGZdq{}STALL\PYGZdq{}}
\PYG{c+cm}{          ]}
\PYG{c+cm}{      , t\PYGZus{}output =}
\PYG{c+cm}{          PortProduct \PYGZdq{}MMO\PYGZdq{}}
\PYG{c+cm}{            [ PortName \PYGZdq{}BRANCH\PYGZdq{}}
\PYG{c+cm}{            , PortName \PYGZdq{}WRITE\PYGZus{}PAIR\PYGZdq{}}
\PYG{c+cm}{            ]}
\PYG{c+cm}{      \PYGZcb{}}
\PYG{c+cm}{   )}
\PYG{c+cm}{\PYGZsh{}\PYGZhy{}\PYGZcb{}}
\PYG{n+nf}{memoryModule}
  \PYG{o+ow}{::} \PYG{k+kt}{Clock} \PYG{k+kt}{System}
  \PYG{o+ow}{\PYGZhy{}\PYGZgt{}} \PYG{k+kt}{Reset} \PYG{k+kt}{System}
  \PYG{o+ow}{\PYGZhy{}\PYGZgt{}} \PYG{k+kt}{Enable} \PYG{k+kt}{System}
  \PYG{o+ow}{\PYGZhy{}\PYGZgt{}} \PYG{k+kt}{Signal} \PYG{k+kt}{System} \PYG{k+kt}{ALUOutput}
  \PYG{o+ow}{\PYGZhy{}\PYGZgt{}} \PYG{k+kt}{Signal} \PYG{k+kt}{System} \PYG{k+kt}{Bool}
  \PYG{o+ow}{\PYGZhy{}\PYGZgt{}} \PYG{k+kt}{Signal} \PYG{k+kt}{System} \PYG{k+kt}{MemOutput}
\PYG{n+nf}{memoryModule} \PYG{n}{clk} \PYG{n}{rst} \PYG{n}{enable} \PYG{n}{aluOut} \PYG{n}{stall} \PYG{o+ow}{=}
  \PYG{k+kr}{let} \PYG{n}{stateMachine} \PYG{o+ow}{=}
        \PYG{p}{(}\PYG{n}{exposeClockResetEnable} \PYG{n}{memState}\PYG{p}{)} \PYG{n}{clk} \PYG{n}{rst} \PYG{n}{enable}
      \PYG{p}{(}\PYG{n}{writeReg}\PYG{p}{,}  \PYG{n}{memOpPrev}\PYG{p}{,} \PYG{n}{aluRes}\PYG{p}{,} \PYG{n}{br}\PYG{p}{)} \PYG{o+ow}{=}
        \PYG{n}{unbundle} \PYG{o}{\PYGZdl{}} \PYG{n}{stateMachine} \PYG{o}{\PYGZdl{}} \PYG{n}{bundle} \PYG{p}{(}\PYG{n}{aluOut}\PYG{p}{,} \PYG{n}{stall}\PYG{p}{)}

      \PYG{n}{writeInfoSolver} \PYG{k+kr}{\PYGZus{}} \PYG{k+kr}{\PYGZus{}} \PYG{k+kt}{True} \PYG{k+kr}{\PYGZus{}} \PYG{o+ow}{=} \PYG{k+kt}{Nothing}
      \PYG{n}{writeInfoSolver} \PYG{n}{address} \PYG{p}{(}\PYG{k+kt}{MemWrite\PYGZsq{}} \PYG{n}{v}\PYG{p}{)} \PYG{k+kr}{\PYGZus{}} \PYG{k+kt}{Nothing} \PYG{o+ow}{=}
        \PYG{k+kt}{Just} \PYG{p}{(}\PYG{n}{unpack} \PYG{n}{address}\PYG{p}{,} \PYG{n}{v}\PYG{p}{)}
      \PYG{n}{writeInfoSolver} \PYG{k+kr}{\PYGZus{}} \PYG{k+kr}{\PYGZus{}} \PYG{k+kr}{\PYGZus{}} \PYG{k+kr}{\PYGZus{}} \PYG{o+ow}{=} \PYG{k+kt}{Nothing}

      \PYG{n}{thirdData}  \PYG{p}{(}\PYG{k+kr}{\PYGZus{}}\PYG{p}{,} \PYG{k+kr}{\PYGZus{}}\PYG{p}{,} \PYG{n}{x}\PYG{p}{,} \PYG{k+kr}{\PYGZus{}}\PYG{p}{)} \PYG{o+ow}{=} \PYG{n}{x} \PYG{p}{`}\PYG{n}{unsafeShiftR}\PYG{p}{`} \PYG{l+m+mi}{2}
      \PYG{n}{secondData} \PYG{p}{(}\PYG{k+kr}{\PYGZus{}}\PYG{p}{,} \PYG{n}{x}\PYG{p}{,} \PYG{k+kr}{\PYGZus{}}\PYG{p}{,} \PYG{k+kr}{\PYGZus{}}\PYG{p}{)} \PYG{o+ow}{=} \PYG{n}{x}

      \PYG{n}{aluRes\PYGZsq{}} \PYG{o+ow}{=} \PYG{n}{thirdData} \PYG{o}{\PYGZlt{}\PYGZdl{}\PYGZgt{}} \PYG{n}{aluOut}
      \PYG{n}{memOp}   \PYG{o+ow}{=} \PYG{n}{secondData} \PYG{o}{\PYGZlt{}\PYGZdl{}\PYGZgt{}} \PYG{n}{aluOut}

      \PYG{n}{writeInfo} \PYG{o+ow}{=}
        \PYG{n}{writeInfoSolver}
          \PYG{o}{\PYGZlt{}\PYGZdl{}\PYGZgt{}} \PYG{n}{aluRes\PYGZsq{}}\PYG{o}{\PYGZlt{}*\PYGZgt{}} \PYG{n}{memOp} \PYG{o}{\PYGZlt{}*\PYGZgt{}} \PYG{n}{stall} \PYG{o}{\PYGZlt{}*\PYGZgt{}} \PYG{n}{br}

      \PYG{n}{memData} \PYG{o+ow}{=}
        \PYG{n}{mainRAM} \PYG{n}{clk} \PYG{n}{rst} \PYG{n}{enable} \PYG{p}{(}\PYG{n}{unpack} \PYG{o}{\PYGZlt{}\PYGZdl{}\PYGZgt{}} \PYG{n}{aluRes\PYGZsq{}}\PYG{p}{)} \PYG{n}{writeInfo}

      \PYG{n}{writePair} \PYG{p}{(}\PYG{k+kt}{Just} \PYG{n}{no}\PYG{p}{)} \PYG{k+kr}{\PYGZus{}} \PYG{k+kt}{MemLoad\PYGZsq{}} \PYG{n}{res} \PYG{o+ow}{=} \PYG{k+kt}{Just} \PYG{p}{(}\PYG{n}{no}\PYG{p}{,} \PYG{n}{res}\PYG{p}{)}
      \PYG{n}{writePair} \PYG{p}{(}\PYG{k+kt}{Just} \PYG{n}{no}\PYG{p}{)} \PYG{n}{res} \PYG{k+kr}{\PYGZus{}} \PYG{k+kr}{\PYGZus{}} \PYG{o+ow}{=} \PYG{k+kt}{Just} \PYG{p}{(}\PYG{n}{no}\PYG{p}{,} \PYG{n}{res}\PYG{p}{)}
      \PYG{n}{writePair} \PYG{k+kr}{\PYGZus{}} \PYG{k+kr}{\PYGZus{}} \PYG{k+kr}{\PYGZus{}} \PYG{k+kr}{\PYGZus{}} \PYG{o+ow}{=} \PYG{k+kt}{Nothing}

      \PYG{n}{writePair\PYGZsq{}} \PYG{o+ow}{=}
        \PYG{n}{writePair}
          \PYG{o}{\PYGZlt{}\PYGZdl{}\PYGZgt{}} \PYG{n}{writeReg} \PYG{o}{\PYGZlt{}*\PYGZgt{}} \PYG{n}{aluRes} \PYG{o}{\PYGZlt{}*\PYGZgt{}} \PYG{n}{memOpPrev} \PYG{o}{\PYGZlt{}*\PYGZgt{}} \PYG{n}{memData}

      \PYG{n}{check} \PYG{k+kt}{True} \PYG{k+kr}{\PYGZus{}} \PYG{o+ow}{=} \PYG{p}{(}\PYG{k+kt}{Nothing}\PYG{p}{,} \PYG{k+kt}{Nothing}\PYG{p}{)}
      \PYG{n}{check} \PYG{k+kr}{\PYGZus{}} \PYG{n}{x} \PYG{o+ow}{=} \PYG{n}{x}
  \PYG{k+kr}{in} \PYG{n}{check} \PYG{o}{\PYGZlt{}\PYGZdl{}\PYGZgt{}} \PYG{n}{stall} \PYG{o}{\PYGZlt{}*\PYGZgt{}} \PYG{n}{bundle} \PYG{p}{(}\PYG{n}{br}\PYG{p}{,} \PYG{n}{writePair\PYGZsq{}}\PYG{p}{)}
\end{Verbatim}
